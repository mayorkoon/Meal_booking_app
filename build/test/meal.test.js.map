{"version":3,"sources":["../../Server/test/meal.test.js"],"names":["chai","use","chaiHttp","expect","describe","it","done","request","app","get","end","err","res","data","body","to","have","status","be","an","length","equal","name","size","price","newPost","id","post","send","newUpdate","put"],"mappings":"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","sourcesContent":["import chai from 'chai';\r\nimport chaiHttp from 'chai-http';\r\nimport app from '../index';\r\n\r\nchai.use(chaiHttp);\r\n// let should = chai.should();\r\nconst { expect } = chai;\r\n\r\ndescribe('GET /', () => {\r\n  it('should return all meals', (done) => {\r\n    chai.request(app)\r\n      .get('/server/v1/meals')\r\n      .end((err, res) => {\r\n        const { data } = res.body;\r\n        expect(res).to.have.status(200);\r\n        expect(res).to.be.an('object');\r\n        expect(data).to.be.an('Array');\r\n        expect(data.length).to.equal(4);\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\ndescribe('GET /:id', () => {\r\n  it('should return specific meal', (done) => {\r\n    chai.request(app)\r\n      .get('/server/v1/meals/2')\r\n      .end((err, res) => {\r\n        const { data } = res.body;\r\n        expect(data.name).to.equal('Jollof Rice');\r\n        expect(data.size).to.equal('Large');\r\n        expect(data.price).to.equal('700');\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\ndescribe('POST /', () => {\r\n  it('should add a new meal', (done) => {\r\n    const newPost = {\r\n      id: 5, name: 'Yam and Egg', size: 'small', price: '400',\r\n    };\r\n    chai.request(app)\r\n      .post('/server/v1/meals')\r\n      .send(newPost)\r\n      .end((err, res) => {\r\n        const { data } = res.body;\r\n        expect(res).to.have.status(200);\r\n        expect(newPost.id).to.equal(data.id);\r\n        expect(newPost.name).to.equal(data.name);\r\n        expect(newPost.size).to.equal(data.size);\r\n        expect(newPost.price).to.equal(data.price);\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\ndescribe('PUT /:id', () => {\r\n  it('should Update an existing meal', (done) => {\r\n    const newUpdate = {\r\n      id: 1, name: 'Bread and Beans', size: 'small', price: '700',\r\n    };\r\n    chai.request(app)\r\n      .put('/server/v1/meals/1')\r\n      .send(newUpdate)\r\n      .end((err, res) => {\r\n        const { data } = res.body;\r\n        expect(res).to.have.status(200);\r\n        expect(newUpdate.id).to.equal(data.id);\r\n        expect(newUpdate.name).to.equal(data.name);\r\n        expect(newUpdate.size).to.equal(data.size);\r\n        expect(newUpdate.price).to.equal(data.price);\r\n        done();\r\n      });\r\n  });\r\n});\r\n"],"file":"meal.test.js"}