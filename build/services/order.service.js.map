{"version":3,"sources":["../../Server/services/order.service.js"],"names":["OrderService","getAllOrders","allOrders","dummyOrder","orders","map","order","newOrder","Orders","orderId","customerName","mealName","quantity","price","status","addOrder","orderLength","length","lastOrderId","newOrderId","push","updateOrder","id","orderToUpdate","find"],"mappings":";;;;;;;AAAA;;AAEA;;;;AAEA,IAAMA,YAAY,GAAG;AACjBC,EAAAA,YADiB,0BACF;AACX,QAAMC,SAAS,GAAGC,oBAAWC,MAAX,CAAkBC,GAAlB,CAAsB,UAACC,KAAD,EAAU;AAC9C,UAAMC,QAAQ,GAAG,IAAIC,cAAJ,EAAjB;AACAD,MAAAA,QAAQ,CAACE,OAAT,GAAmBH,KAAK,CAACG,OAAzB;AACAF,MAAAA,QAAQ,CAACG,YAAT,GAAwBJ,KAAK,CAACI,YAA9B;AACAH,MAAAA,QAAQ,CAACI,QAAT,GAAoBL,KAAK,CAACK,QAA1B;AACAJ,MAAAA,QAAQ,CAACK,QAAT,GAAoBN,KAAK,CAACM,QAA1B;AACAL,MAAAA,QAAQ,CAACM,KAAT,GAAiBP,KAAK,CAACO,KAAvB;AACAN,MAAAA,QAAQ,CAACO,MAAT,GAAkBR,KAAK,CAACQ,MAAxB;AACA,aAAOP,QAAP;AACH,KATiB,CAAlB;;AAUA,WAAOL,SAAP;AACH,GAbgB;AAcjBa,EAAAA,QAdiB,oBAcRT,KAdQ,EAcD;AACZ,QAAMU,WAAW,GAAGb,oBAAWC,MAAX,CAAkBa,MAAtC;AACA,QAAMC,WAAW,GAAGf,oBAAWC,MAAX,CAAkBY,WAAW,GAAG,CAAhC,EAAmCP,OAAvD;AACA,QAAMU,UAAU,GAAGD,WAAW,GAAG,CAAjC;AACAZ,IAAAA,KAAK,CAACG,OAAN,GAAgBU,UAAhB;;AACAhB,wBAAWC,MAAX,CAAkBgB,IAAlB,CAAuBd,KAAvB;;AACA,WAAOA,KAAP;AACH,GArBgB;AAsBjBe,EAAAA,WAtBiB,uBAsBLf,KAtBK,EAsBE;AAAA,QACPgB,EADO,GACAhB,KADA,CACPgB,EADO;;AAEf,QAAMC,aAAa,GAAGpB,oBAAWC,MAAX,CAAkBoB,IAAlB,CAAuB,UAAAlB,KAAK;AAAA,aAAIA,KAAK,CAACgB,EAAN,IAAYA,EAAhB;AAAA,KAA5B,CAAtB;;AACAC,IAAAA,aAAa,CAACd,OAAd,GAAwBH,KAAK,CAACG,OAA9B;AACAc,IAAAA,aAAa,CAACb,YAAd,GAA6BJ,KAAK,CAACI,YAAnC;AACAa,IAAAA,aAAa,CAACV,KAAd,GAAsBP,KAAK,CAACO,KAA5B;AACAU,IAAAA,aAAa,CAACX,QAAd,GAAyBN,KAAK,CAACM,QAA/B;AACAW,IAAAA,aAAa,CAACZ,QAAd,GAAyBL,KAAK,CAACK,QAA/B;AACAY,IAAAA,aAAa,CAACT,MAAd,GAAuBR,KAAK,CAACQ,MAA7B;AACAX,wBAAWC,MAAX,CAAkBE,KAAK,CAACgB,EAAxB,IAA8BC,aAA9B;AACA,WAAOA,aAAP;AACH;AAjCgB,CAArB;eAoCevB,Y","sourcesContent":["import dummyOrder from '../utilities/dummyOrder';\r\n\r\nimport Orders from '../models/order.model'\r\n\r\nconst OrderService = {\r\n    getAllOrders() {\r\n        const allOrders = dummyOrder.orders.map((order) =>{\r\n            const newOrder = new Orders();\r\n            newOrder.orderId = order.orderId;\r\n            newOrder.customerName = order.customerName;\r\n            newOrder.mealName = order.mealName;\r\n            newOrder.quantity = order.quantity;\r\n            newOrder.price = order.price;\r\n            newOrder.status = order.status;\r\n            return newOrder;\r\n        });\r\n        return allOrders;\r\n    },\r\n    addOrder(order) {\r\n        const orderLength = dummyOrder.orders.length;\r\n        const lastOrderId = dummyOrder.orders[orderLength - 1].orderId; \r\n        const newOrderId = lastOrderId + 1;\r\n        order.orderId = newOrderId;\r\n        dummyOrder.orders.push(order);\r\n        return order;\r\n    },\r\n    updateOrder(order) {\r\n        const { id } = order;\r\n        const orderToUpdate = dummyOrder.orders.find(order => order.id == id);\r\n        orderToUpdate.orderId = order.orderId;\r\n        orderToUpdate.customerName = order.customerName;\r\n        orderToUpdate.price = order.price;\r\n        orderToUpdate.quantity = order.quantity;\r\n        orderToUpdate.mealName = order.mealName;\r\n        orderToUpdate.status = order.status;\r\n        dummyOrder.orders[order.id] = orderToUpdate;\r\n        return orderToUpdate\r\n    }\r\n};\r\n\r\nexport default OrderService;"],"file":"order.service.js"}